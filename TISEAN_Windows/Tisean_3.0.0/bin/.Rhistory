7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
D1
O1<-as.factor(rep(c(-1:1),each=9,3))
O1
C1
D1<-as.factor(rep(c(-1:1),each=27))
C1<-as.factor(rep(c(-1:1),each=3,9))
Y11<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
A1<-as.factor(rep(c(-1:1),each=27))
B1<-as.factor(rep(c(-1:1),each=3,9))
Y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
lmod <- lm(Y1~A1,B1)
lmod <- lm(Y1~A1*B1)
A1<-as.factor(rep(c(-1:1),each=27))
B1<-as.factor(rep(c(-1:1),each=3,9))
Y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
lmod <- lm(Y1~A1*B1)
#b) Obtenga el ANOVA sin desglosar, obtenga conclusiones.
A11<-as.factor(rep(c(-1,0,1),each=24))
A11
A1<-as.factor(rep(c(-1:1),each=9))
A1
B1<-as.factor(rep(c(-1:1),each=3,3))
B1
A1<-as.factor(rep(c(-1:1),each=9))
B1<-as.factor(rep(c(-1:1),each=3,3))
Y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
lmod <- lm(Y1~A1*B1)
modelo1 <- lm(Y1~A1*B1)
anova(modelo1)
#b)Realiza las grafica de interaccion y de efectos principales
library(gplots)
plotmeans(Y11~B11)
plotmeans(Y1~A1)
plotmeans(Y1~B1)
interaction.plot(A1,B1,Y1)
plotmeans(Y1~A1)
plotmeans(Y1~B1)
interaction.plot(A1,B1,Y1)
#c)verifique los supuestos a traves de la grafica de residuales
par(mfrow=c(2,2))
plot(modelo1)
#graficamente puedo decir que los resuduos tienen
#independencia, varianza constante y normalidad
shapiro.test(residuals(lm6))
#b) Obtenga el ANOVA sin desglosar, obtenga conclusiones.
A11<-as.factor(rep(c(-1,0,1),each=24))
B11<-as.factor(rep(c(-1,1),each=12,3))
C11<-as.factor(rep(c(-1,1),each=6,6))
Y11<-c(60,75,75,86,70,70,55,53,53,55,55,55,
67,73,73,67,68,68,52,52,57,52,54,54,
62,68,65,76,65,65,44,44,45,48,48,45,
71,80,80,72,80,80,60,60,60,67,67,65,
76,71,75,70,68,73,52,51,50,52,48,54,
75,75,75,75,75,77,56,55,57,59,50,55)
lm6<-lm(Y11~A11*B11*C11)
anova(lm6)
library(gplots)
plotmeans(Y11~B11)
plotmeans(Y11~C11)
interaction.plot(A11,B11,Y11)
interaction.plot(B11,C11,Y11)
plotmeans(Y11~C11)
par(mfrow=c(2,2))
plot(lm6)
#graficamente puedo decir que los resuduos tienen
#independencia, varianza constante y normalidad
shapiro.test(residuals(lm6))
bartlett.test(residuals(lm6)~A11)
bartlett.test(residuals(lm6)~B11)
bartlett.test(residuals(lm6)~C11)
dwtest(lm6)
#graficamente puedo decir que los resuduos tienen
#independencia, varianza constante y normalidad
shapiro.test(residuals(modelo1))
bartlett.test(residuals(modelo1)~A1)
bartlett.test(residuals(modelo1)~B1)
dwtest(modelo1)
#existe varianza constante para ninguno de los factores
library(lmtest)
dwtest(modelo1)
#d)Obtenga el anova desglosado, e interpretelo
A1<-(rep(c(-1:1),each=9))
B1<-(rep(c(-1:1),each=3,3))
Y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo1)
modelo2 <- lm(y1~I(a1)+I(a1^2)+
I(b1)+I(b1^2)+
I(a1*b1)+I(a1^2*b1)+
I(b1*a1^2)+(b1^2*a1))
#d)Obtenga el anova desglosado, e interpretelo
a1<-(rep(c(-1:1),each=9))
b1<-(rep(c(-1:1),each=3,3))
y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
modelo2 <- lm(y1~I(a1)+I(a1^2)+
I(b1)+I(b1^2)+
I(a1*b1)+I(a1^2*b1)+
I(b1*a1^2)+(b1^2*a1))
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo2)
#f) Obtenga el ANOVA desglosado. Comente lo obtenido y contr???stelo con lo observado en los incisos c) y d).
a11<-(rep(c(-1,0,1),each=24))
b11<-(rep(c(-1,1),each=12,3))
c11<-(rep(c(-1,1),each=6,6))
y11<-c(60,75,75,86,70,70,55,53,53,55,55,55,
67,73,73,67,68,68,52,52,57,52,54,54,
62,68,65,76,65,65,44,44,45,48,48,45,
71,80,80,72,80,80,60,60,60,67,67,65,
76,71,75,70,68,73,52,51,50,52,48,54,
75,75,75,75,75,77,56,55,57,59,50,55)
mod2<-lm(y11~I(a11)+I(a11^2)+
I(b11)+
I(c11)+
I(a11*b11)+I(a11^2*b11)+
I(a11*c11)+I(a11^2*c11)+
I(b11*c11)+
I(a11*b11*c11)+I(a11^2*b11*c11))
anova(mod2)
anova(lm6)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo1)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo2)
modelo2 <- lm(y1~I(a1)+I(a1^2)+
I(b1)+I(b1^2)+
I(a1*b1)+I(a1^2*b1)+
I(b1^2*a1)+I(a1^2*b1^2))
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo2)
anova(mod2)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo2)
plotmeans(Y11~C11)
plotmeans(Y11~C11)
interaction.plot(A11,B11,Y11)
interaction.plot(B11,C11,Y11)
interaction.plot(A11,B11,Y11)
interaction.plot(B11,C11,Y11)
A<-rep(c(-1,1),each=8)
A
B<-rep(c(-1,1),each=2,4)
B
C<-rep(c(-1,1),each=4,2)
C
D<-rep(c(-1,1),8)
D
# a
a<-(rep(c(-1,1),4))
b<-(rep(c(-1,1),each=2,2))
c<-(rep(c(-1,1),each=4))
d<-a*b
e<-c*d
A<-as.factor(rep(c(-1,1),4))
B<-as.factor(rep(c(-1,1),each=2,2))
C<-as.factor(rep(c(-1,1),each=4))
D<-as.factor(d)
E<-as.factor(e)
Y1<-c(195,102,87,354,
496,1001,1371,775)
hf<-data.frame(A,B,C,D,E,Y1)
hf
mo<-lm(Y1~a+b+c+d+e+a*b+a*c+a*d+a*e+b*c+b*d+b*e+c*d+c*e+d
*e)
library(FrF2)
DanielPlot(mo)
library(pid)
paretoPlot(mo)
#b)  obtenga el mejor anova
monS<-lm(Y1~C+B+E)
anova(monS)
mon1<-lm(Y1~C+E)
anova(mon1)
anova(monS,mon1)
modelo <- lm(Y~a+b+c+d+e+a*b+a*c+a*d+a*e+b*c+b*d+b*e+c*d+c*e+d*e)
a<-rep(c(-1,1),8)
b<-rep(c(-1,1),each=2,4)
c<-rep(c(-1,1),each=4,2)
d<-rep(c(-1,1),each=8)
e<-a*b*c*d
A<-as.factor(rep(c(-1,1),8))
B<-as.factor(rep(c(-1,1),each=2,4))
C<-as.factor(rep(c(-1,1),each=4,2))
D<-as.factor(rep(c(-1,1),each=8))
E<-as.factor(e)
Y<-c(3318, 4141,3790,4061,3431,
3425,3507,3765,2580,2450,
2319,3067,1925,2466,2485,
2450)
modelo <- lm(Y~a+b+c+d+e+a*b+a*c+a*d+a*e+b*c+b*d+b*e+c*d+c*e+d*e)
model1 <- lm(Y~a+b+c+d+e+a*b+a*c+a*d+a*e+b*c+b*d+b*e+c*d+c*e+d*e)
#b)encuentre el mejor anova
library(FrF2)
DanielPlot(model1)
library(pid)
paretoPlot(model1)
DanielPlot(model1)
paretoPlot(model1)
#b)  obtenga el mejor anova
mon2<-lm(Y11~B1*D1*E1)
a1<-(rep(c(-1,1),8))
a1
b1<-rep(c(-1,1),each=2,4)
b1
c1<-rep(c(-1,1),each=4,2)
c1
d1<-rep(c(-1,1),each=8)
d1
e1<-c(a1*b1*c1*d1)
e1
Y11<-c(0.97,1.7,1.13,1.25,
1.18,0.98,1.47,1.28,
1.85,0.62,0.78,1.36,
0.76,2.1,1.09,1.1)
A1<-(rep(c(-1,1),8))
B1<-rep(c(-1,1),each=2,4)
C1<-rep(c(-1,1),each=4,2)
D1<-rep(c(-1,1),each=8)
E1<-as.factor(e1)
mo2<-lm(Y11~a1+b1+c1+d1+e1+a1*b1+a1*c1+a1*d1+a1*e1+b1*c1+b1*d1+b1*e1+c1*d1+c1*e1+d1
*e1)
library(FrF2)
DanielPlot(mo2)
library(pid)
paretoPlot(mo2)
#b)  obtenga el mejor anova
mon2<-lm(Y11~B1*D1*E1)
anova(mon2)
paretoPlot(mo2)
DanielPlot(mo2)
mo2<-lm(Y11~a1+b1+c1+d1+e1+a1*b1+a1*c1+a1*d1+a1*e1+b1*c1+b1*d1+b1*e1+c1*d1+c1*e1+d1
*e1)
library(FrF2)
DanielPlot(mo2)
library(pid)
paretoPlot(mo2)
DanielPlot(model1)
library(pid)
DanielPlot(model1)
library(pid)
paretoPlot(model1)
mod1<-lm(Y11~A+C+D+E+A*C+B*E+D*E+C*E)
anova(mod1)
mod2<-lm(Y11~A+C+D+E)
anova(mod2)
anova(mod1,mod2)
anova(mon2,mon22)
#b)  obtenga el mejor anova
mon2<-lm(Y11~B1*D1*E1)
anova(mon2)
anova(mon22)
mon22<-lm(Y11~E1+D1*E1+B1*E1)
anova(mon22)
mod1<-lm(Y11~A+C+D+E+A*C+B*E+D*E+C*E)
anova(mod1)
anova(mod2)
a1<-(rep(c(-1,1),8))
a1
b1<-rep(c(-1,1),each=2,4)
b1
c1<-rep(c(-1,1),each=4,2)
c1
d1<-rep(c(-1,1),each=8)
d1
e1<-c(a1*b1*c1*d1)
e1
Y11<-c(0.97,1.7,1.13,1.25,
1.18,0.98,1.47,1.28,
1.85,0.62,0.78,1.36,
0.76,2.1,1.09,1.1)
A1<-(rep(c(-1,1),8))
B1<-rep(c(-1,1),each=2,4)
C1<-rep(c(-1,1),each=4,2)
D1<-rep(c(-1,1),each=8)
E1<-as.factor(e1)
mo2<-lm(Y11~a1+b1+c1+d1+e1+a1*b1+a1*c1+a1*d1+a1*e1+b1*c1+b1*d1+b1*e1+c1*d1+c1*e1+d1
*e1)
library(FrF2)
DanielPlot(mo2)
library(pid)
paretoPlot(mo2)
#b)  obtenga el mejor anova
mon2<-lm(Y11~B1*D1*E1)
anova(mon2)
mon22<-lm(Y11~E1+D1*E1+B1*E1)
anova(mon22)
#c)que efectos parecen tener un efecto significativo sobre la entrada de calor
library(gplots)
plotmeans(Y11~E1)
mod1<-lm(Y~A+C+D+E+A*C+B*E+D*E+C*E)
anova(mod1)
mod2<-lm(Y~A+C+D+E)
anova(mod2)
DanielPlot(model1)
library(pid)
paretoPlot(model1)
mod1<-lm(Y~A+C+D+E+A*C+B*E+D*E+C*E)
anova(mod1)
mod2<-lm(Y~A+C+D+E)
anova(mod2)
anova(mod1,mod2)
anova(mod1)
anova(mod1,mod2)
plotmeans(Y~E)
plotmeans(Y~A+B+C+D+E)
plotmeans(Y~A+B+C+D+E)
plotmeans(Y~A+*B)
plotmeans(Y~A*B)
plotmeans(Y~A*B)
plotmeans(Y~AB)
plotmeans(Y~A)
mod2<-lm(Y~A+C+D+E)
anova(mod2)
plotmeans(Y~A)
plotmeans(Y~C)
plotmeans(Y~D)
plotmeans(Y~E)
#d)supuestos
par(mfrow=c(2,2))
plot(mod1)
shapiro.test(residuals(mod1))
bartlett.test(residuals(mod1)~A)
bartlett.test(residuals(mod1)~B)
shapiro.test(residuals(mod1))
bartlett.test(residuals(mod1)~A)
bartlett.test(residuals(mod1)~B)
library(lmtest)
dwtest(mod1)
#Si A=Temperatura   B=Sacarosa
A1<-as.factor(rep(c(-1:1),each=9))
A1
B1<-as.factor(rep(c(-1:1),each=3,3))
B1
#Si A=Temperatura   B=Sacarosa
A1<-as.factor(rep(c(-1:1),9))
A1
#Si A=Temperatura   B=Sacarosa
A1<-as.factor(rep(c(-1:1),9))
B1<-as.factor(rep(c(-1:1),each=3,3))
#Si A=Temperatura   B=Sacarosa
A1<-as.factor(rep(c(-1:1),9))
A1
B1
modelo1 <- lm(Y1~A1*B1)
#Si A=Temperatura   B=Sacarosa
A1<-as.factor(rep(c(-1:1),9))
A1
B1<-as.factor(rep(c(-1:1),each=3,3))
Y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
modelo1 <- lm(Y1~A1*B1)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo1)
#b)Realiza las grafica de interaccion y de efectos principales
library(gplots)
plotmeans(Y1~A1)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo1)
plotmeans(Y1~B1)
#c)verifique los supuestos a traves de la grafica de residuales
par(mfrow=c(2,2))
plot(modelo1)
#d)Obtenga el anova desglosado, e interpretelo
a1<-(rep(c(-1:1),9))
b1<-(rep(c(-1:1),each=3,3))
y1<-c(3.1,	3.7,	4.7,
5.5,	6.7,	7.3,
7.9,	9.2,	9.3,
6,	6.9,	7.5,
11.5,	12.9,	13.4,
17.5,	15.8,	14.7,
7.7,	8.3,	9.5,
15.7,	14.3,	15.9,
19.1,	18,	19.9
)
modelo2 <- lm(y1~I(a1)+I(a1^2)+
I(b1)+I(b1^2)+
I(a1*b1)+I(a1^2*b1)+
I(b1^2*a1)+I(a1^2*b1^2))
anova(modelo2)
#a) obtenga el anova sin desglosar y obtenga conclusiones
anova(modelo1)
setTISEANpath(path = "E:/Descargas/Compressed/Tisean_3.0.0/bin", GUI = interactive())
dat <- sin(1:10000)+rnorm(10000)/5
polynomout <- polynom(dat, p = 3, L=100, n=9900)
library(RTisean)
dat <- sin(1:10000)+rnorm(10000)/5
polynomout <- polynom(dat, p = 3, L=100, n=9900)
filteredat <- ghkss(dat)[[1]]
ghkss
polynom
polynomout <- polynom(dat, p = 3, L=100, n=9900)
RTisean::as.list.TISEANoutput()
RTisean::as.list.TISEANoutput()
RTisean::as.list.TISEANoutput(x = c("polynom.exe")
RTisean::as.list.TISEANoutput(x = c("polynom.exe")
RTisean::as.list.TISEANoutput(x = c("polynom.exe"))
RTisean::as.list.TISEANoutput(x = c("polynom"))
RTisean::as.list.TISEANoutput(x = c("polynom"))
RTisean::as.list.TISEANoutput(x = "polynom")
RTisean::as.list.TISEANoutput(x = "polynom")
RTisean::as.list.TISEANoutput("polynom")
RTisean::as.matrixList("polynom")
polynomout <- polynom(dat, p = 3, L=100, n=9900)
library(RTisean)
dat <- logistic(iter=10000,r=3.8, noisesd=0.01)
filteredat <- ghkss(dat)[[1]]
library(devtools)
install.packages("rprojroot")
library(devtools)
install.packages("testthat")
library(devtools)
install.packages("devtools")
install_github("RTisean", "antoniofabio", subdir = "RTisean")
devtools :: install_github ("antoniofabio / RTisean", subdir = "RTisean")
install_github ("antoniofabio / RTisean", subdir = "RTisean")
library(devtools)
install_github("RTisean", "antoniofabio", subdir = "RTisean")
devtools :: install_github ("antoniofabio / RTisean", subdir = "RTisean")
devtools :: install_github ("antoniofabio/RTisean", subdir = "RTisean")
dat <- logistic(iter=10000,r=3.8, noisesd=0.01)
library(RTisean)
dat <- logistic(iter=10000,r=3.8, noisesd=0.01)
filteredat <- ghkss(dat)[[1]]
setTISEANpath(path = "E:/Descargas/Compressed/Tisean_3.0.0/bin")
dat <- sin(1:10000)+rnorm(10000)/5
polynomout <- polynom(dat, p = 3, L=100, n=9900)
rpred <- polynomout$pred
plot(dat[9901:10000],t="l",xlab="Time",ylab="Sin data",ylim=c(-1.9,max(dat)))
lines(pred,col=2)
lines(rpred,col=2)
legend(70,-1.5, "Noisy Data",fill=1, bty="n")
legend(70,-1.7,"Filtered Data",fill=2,bty="n")
setwd("E:/Descargas/Compressed/Tisean_3.0.0/bin")
dir()
dat <- sin(1:10000)+rnorm(10000)/5
polynomout <- polynom(dat, p = 3, L=100, n=9900)
pred <- polynomout$pred
plot(dat[9901:10000],t="l",xlab="Time",ylab="Sin data",ylim=c(-1.9,max(dat)))
lines(pred,col=2)
legend(70,-1.5, "Noisy Data",fill=1, bty="n")
legend(70,-1.7,"Filtered Data",fill=2,bty="n")
dat
